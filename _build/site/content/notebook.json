{"kind":"Notebook","sha256":"8530765c53a4eacc5a27e0c1d4381f609ae18d4f50b1f3965933f34ff5a80b2b","slug":"notebook","location":"/ignore/02-notebook.ipynb","dependencies":[],"frontmatter":{"title":"Een voorbeeld van een notebook","subtitle":"tjong jonge prachtig hoor","authors":[{"nameParsed":{"literal":"Ernest Suyver","given":"Ernest","family":"Suyver"},"name":"Ernest Suyver","orcid":"0000-0002-7859-8394","email":"ernestsuyver@gmail.com","affiliations":["Independent"],"id":"contributors-02-notebook-generated-uid-0","corresponding":true}],"affiliations":[{"id":"Independent","name":"Independent"}],"date":"2023/09/27","license":{"code":{"id":"MIT","name":"MIT License","osi":true,"free":true,"url":"https://opensource.org/licenses/MIT"}},"github":"https://github.com/ErnestSuyver/CCL","keywords":["digital creativity","make","art","design"],"exports":[{"format":"ipynb","filename":"02-notebook.ipynb","url":"/02-notebook-101aef1f499fc0ae3c2a19c2389baded.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"MyST allows you to directly include Jupyter Notebooks in your books, documents and websites.\nThis Jupyter Notebook can be rendered directly using MyST.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"PnP9yRw5VQ"}],"key":"BSGOtbnKrh"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"For example, let us import ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"po9XRTcZk0"},{"type":"inlineCode","value":"altair","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"fFirOgEVEp"},{"type":"text","value":" and create a demo of an interactive plot!","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"nd50lU8tPH"}],"key":"JiOA4RExCA"}],"key":"oXlWooVAyp"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import altair as alt\nfrom vega_datasets import data\n\nsource = data.cars()\nbrush = alt.selection_interval(encodings=['x'])\npoints = alt.Chart(source).mark_point().encode(\n    x='Horsepower:Q',\n    y='Miles_per_Gallon:Q',\n    size='Acceleration',\n    color=alt.condition(brush, 'Origin:N', alt.value('lightgray'))\n).add_params(brush)\n\nbars = alt.Chart(source).mark_bar().encode(\n    y='Origin:N',\n    color='Origin:N',\n    x='count(Origin):Q'\n).transform_filter(brush)","key":"B2s4oNVYY6"},{"type":"output","id":"JxusmPUTv-6DJIm5_uNeR","data":[],"key":"r1NfNKNfPC"}],"data":{"type":"notebook-code"},"key":"rBI1EXWyeW"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can now plot the altair example, which is fully interactive, try dragging in the plot to select cars by their horsepower.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EdyL0iYJSx"}],"key":"BWvECNAZqN"}],"data":{"type":"notebook-content"},"key":"v0i64otPq7"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"points & bars","identifier":"horsepower-code","enumerator":"1","html_id":"horsepower-code","key":"EafLC5fPpk"},{"type":"output","id":"hhq7dm6fulKAcz23B1WHk","data":[{"output_type":"execute_result","execution_count":null,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"c58751f13112cb7d393a17c4cfbdd769","path":"/c58751f13112cb7d393a17c4cfbdd769.html"},"text/plain":{"content":"alt.VConcatChart(...)","content_type":"text/plain"}}}],"identifier":"horsepower-output","html_id":"horsepower-output","key":"QU87i1KxvA"}],"data":{"type":"notebook-code"},"identifier":"horsepower","label":"horsepower","html_id":"horsepower","key":"IQrkUcBum3"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# https://matplotlib.org/stable/gallery/statistics/time_series_histogram.html#sphx-glr-gallery-statistics-time-series-histogram-py\nfrom copy import copy\n\nimport numpy as np\nimport numpy.matlib\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm","key":"xfjIydPeCD"},{"type":"output","id":"xlUWiG2GGwTuT9KmWj1KS","data":[],"key":"DdQalKzCS0"}],"data":{"type":"notebook-code"},"key":"fqaECbcMMw"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Make some data; a 1D random walk + small fraction of sine waves\nnum_series = 1000\nnum_points = 100\nSNR = 0.10  # Signal to Noise Ratio\nx = np.linspace(0, 4 * np.pi, num_points)\n# Generate unbiased Gaussian random walks\nY = np.cumsum(np.random.randn(num_series, num_points), axis=-1)\n# Generate sinusoidal signals\nnum_signal = int(round(SNR * num_series))\nphi = (np.pi / 8) * np.random.randn(num_signal, 1)  # small random offset\nY[-num_signal:] = (\n    np.sqrt(np.arange(num_points))[None, :]  # random walk RMS scaling factor\n    * (np.sin(x[None, :] - phi)\n       + 0.05 * np.random.randn(num_signal, num_points))  # small random noise\n)\n\n\n# Now we will convert the multiple time series into a histogram. Not only will\n# the hidden signal be more visible, but it is also a much quicker procedure.\n# Linearly interpolate between the points in each time series\nnum_fine = 800\nx_fine = np.linspace(x.min(), x.max(), num_fine)\ny_fine = np.empty((num_series, num_fine), dtype=float)\nfor i in range(num_series):\n    y_fine[i, :] = np.interp(x_fine, x, Y[i, :])\ny_fine = y_fine.flatten()\nx_fine = np.matlib.repmat(x_fine, num_series, 1).flatten()","key":"f0hYiCtrsh"},{"type":"output","id":"bfbHqQy_kTglrL2zLYwde","data":[],"key":"ofD5GcRkIz"}],"data":{"type":"notebook-code"},"key":"MjSBmrl0nW"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Important!\nThis data is simulated, and may just be random noise! ðŸ”Š","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CHqiE1Buz8"}],"key":"OCnbX87rQh"}],"data":{"type":"notebook-content"},"key":"lZshbapBUS"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"fig, axes = plt.subplots(figsize=(8, 4), constrained_layout=True)\ncmap = copy(plt.cm.plasma)\ncmap.set_bad(cmap(0))\nh, xedges, yedges = np.histogram2d(x_fine, y_fine, bins=[400, 100])\npcm = axes.pcolormesh(xedges, yedges, h.T, cmap=cmap,\n                         norm=LogNorm(vmax=1.5e2), rasterized=True)\nfig.colorbar(pcm, ax=axes, label=\"# points\", pad=0)\naxes.set_title(\"2d histogram and log color scale\");","identifier":"plasma-code","enumerator":"2","html_id":"plasma-code","key":"fEO6d4Mu8W"},{"type":"output","id":"0gBsGy0EHLpA3a6ICTqNe","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4be3c92f883a126598e952ee709598c1","path":"/4be3c92f883a126598e952ee709598c1.png"},"text/plain":{"content":"<Figure size 800x400 with 2 Axes>","content_type":"text/plain"}}}],"identifier":"plasma-output","html_id":"plasma-output","key":"NB0otn5KfC"}],"data":{"type":"notebook-code"},"identifier":"plasma","label":"plasma","html_id":"plasma","key":"HBM2AhgPAE"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Import the DrawBot library\nfrom drawBot import *\n\n# Set the canvas size\ncanvasSize(400, 400)\n\n# Set the fill color to black\nfill(0)\n\n# Calculate the center of the canvas\ncenterX, centerY = width() / 2, height() / 2\n\n# Define the diameter of the circle\ndiameter = 200\n\n# Calculate the radius\nradius = diameter / 2\n\n# Draw a black circle in the center\noval(centerX - radius, centerY - radius, diameter, diameter)\n\n# Save the drawing as a PDF or image (optional)\n# saveImage(\"black_circle.png\")\n\n# Display the canvas\nshow()","key":"R1HNIy41XT"},{"type":"output","id":"DCiF04E1zllpetFkT4tg6","data":[{"ename":"ModuleNotFoundError","evalue":"No module named 'drawBot'","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)\n\u001b[1;32m/Users/jjesuyver/Documents/GitHub/CCL/02-notebook.ipynb Cell 9\u001b[0m line \u001b[0;36m2\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/jjesuyver/Documents/GitHub/CCL/02-notebook.ipynb#X11sZmlsZQ%3D%3D?line=0'>1</a>\u001b[0m \u001b[39m# Import the DrawBot library\u001b[39;00m\n\u001b[0;32m----> <a href='vscode-notebook-cell:/Users/jjesuyver/Documents/GitHub/CCL/02-notebook.ipynb#X11sZmlsZQ%3D%3D?line=1'>2</a>\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39mdrawBot\u001b[39;00m \u001b[39mimport\u001b[39;00m \u001b[39m*\u001b[39m\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/jjesuyver/Documents/GitHub/CCL/02-notebook.ipynb#X11sZmlsZQ%3D%3D?line=3'>4</a>\u001b[0m \u001b[39m# Set the canvas size\u001b[39;00m\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/jjesuyver/Documents/GitHub/CCL/02-notebook.ipynb#X11sZmlsZQ%3D%3D?line=4'>5</a>\u001b[0m canvasSize(\u001b[39m400\u001b[39m, \u001b[39m400\u001b[39m)\n\n\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'drawBot'"}],"key":"rPQJ7oGmkN"}],"data":{"type":"notebook-code"},"key":"r3VUNqTAeW"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import drawBot\n\ndrawBot.newDrawing()\ndrawBot.newPage(1000, 1000)\ndrawBot.rect(10, 10, 100, 100)\n# drawBot.saveImage(\"~/Desktop/aRect.png\")\ndrawBot.endDrawing()","key":"LpZM20dmUi"},{"type":"output","id":"OZa5BT8oqhD5at0T7Mqk5","data":[{"ename":"ModuleNotFoundError","evalue":"No module named 'drawBot'","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)\n\u001b[1;32m/Users/jjesuyver/Documents/GitHub/CCL/02-notebook.ipynb Cell 10\u001b[0m line \u001b[0;36m1\n\u001b[0;32m----> <a href='vscode-notebook-cell:/Users/jjesuyver/Documents/GitHub/CCL/02-notebook.ipynb#X12sZmlsZQ%3D%3D?line=0'>1</a>\u001b[0m \u001b[39mimport\u001b[39;00m \u001b[39mdrawBot\u001b[39;00m\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/jjesuyver/Documents/GitHub/CCL/02-notebook.ipynb#X12sZmlsZQ%3D%3D?line=2'>3</a>\u001b[0m drawBot\u001b[39m.\u001b[39mnewDrawing()\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/jjesuyver/Documents/GitHub/CCL/02-notebook.ipynb#X12sZmlsZQ%3D%3D?line=3'>4</a>\u001b[0m drawBot\u001b[39m.\u001b[39mnewPage(\u001b[39m1000\u001b[39m, \u001b[39m1000\u001b[39m)\n\n\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'drawBot'"}],"key":"LWtrXpoziB"}],"data":{"type":"notebook-code"},"key":"Ua2km4mM3j"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"from turtle import *\nimport random\n\ndef set_theme(canvas_width = 800,\n              canvas_height = 800,\n              canvas_color = (232/255, 210/255, 210/255),\n              pen_color = (94/255, 71/255, 69/255),\n              thickness = 1,\n              speed_value = 0,\n              tracer_value = False,\n              hide_turtle = True\n              ):\n    \n    setup(canvas_width, canvas_height)\n    bgcolor(canvas_color)\n    color(pen_color)\n    width(thickness)\n    speed(speed_value)\n    tracer(tracer_value)\n    if hide_turtle:\n        hideturtle()\n\ndef euler_curve(step_size, angle_step, n_steps):\n    angle = 0\n    for i in range(n_steps):\n        right(angle)\n        forward(step_size)\n        angle += angle_step\n\nset_theme()\neuler_curve(40, 1.00, 600)\n\ntracer(True)\nexitonclick()","key":"wPxVgkOfI2"},{"type":"output","id":"kAvPeMO6mYeSPmmIXT3kl","data":[{"ename":"","evalue":"","output_type":"error","traceback":"\u001b[1;31mThe Kernel crashed while executing code in the the current cell or a previous cell. Please review the code in the cell(s) to identify a possible cause of the failure. Click <a href='https://aka.ms/vscodeJupyterKernelCrash'>here</a> for more info. View Jupyter <a href='command:jupyter.viewOutput'>log</a> for further details."}],"key":"qybYNmH4ya"}],"data":{"type":"notebook-code"},"key":"O0TLCXqtlC"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import turtle\n\ndef set_theme(canvas_width=800, canvas_height=800,\n              canvas_color=(232/255, 210/255, 210/255),\n              pen_color=(94/255, 71/255, 69/255),\n              thickness=1,\n              speed_value=0,\n              hide_turtle=True):\n    screen = turtle.Screen()\n    screen.setup(width=canvas_width, height=canvas_height)\n    screen.bgcolor(canvas_color)\n\n    # Create a Turtle object for drawing\n    t = turtle.Turtle()\n    t.color(pen_color)\n    t.width(thickness)\n    t.speed(speed_value)\n    if hide_turtle:\n        t.hideturtle()\n\ndef euler_curve(step_size, angle_step, n_steps):\n    angle = 0\n    for i in range(n_steps):\n        turtle.right(angle)\n        turtle.forward(step_size)\n        angle += angle_step\n\n# Call set_theme before drawing the Euler curve\nset_theme()\neuler_curve(40, 1.00, 6)\n\n# Keep the graphics window open in the notebook\nturtle.done()","key":"tEpSpuIytu"},{"type":"output","id":"8cm867CKX-o3y85mTbArZ","data":[],"key":"soWS1hVsJu"}],"data":{"type":"notebook-code"},"key":"wA2ol2H7wo"}],"key":"FnnzxQy944"},"references":{"cite":{"order":[],"data":{}}}}