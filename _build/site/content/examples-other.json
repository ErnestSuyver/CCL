{"kind":"Notebook","sha256":"047b74189a218be66d52097456e215086f7e8af61ba65994ae73ec041db57a5e","slug":"examples-other","location":"/ignore/examples-other.ipynb","dependencies":[],"frontmatter":{"title":"Examples (Matplotlib)","github":"https://github.com/ErnestSuyver/CCL","keywords":["digital creativity","make","art","design"],"exports":[{"format":"ipynb","filename":"examples-other.ipynb","url":"/examples-other-deddcf2ccd81c234907d85f525f5b934.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This is a Jupyter Notebook. A notebook is a \"computational document\", that is, a document where text may be combined with code and data, and where code can run and visualized.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WLK8Iliybh"}],"key":"yHbCdUIEP2"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This makes notebooks useful for our purposes: to share examples of creative coding by providing some explanation and some code, and having the ability to run that code, have the output right there and then, and to edit the code and re-run it.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"P6n7MmS334"}],"key":"rpnuZDxw3K"}],"data":{"type":"notebook-content"},"key":"TL4Zb7OaiW"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Turtle Graphics in Matplotlib","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cjLgzAu7Kp"}],"identifier":"turtle-graphics-in-matplotlib","label":"Turtle Graphics in Matplotlib","html_id":"turtle-graphics-in-matplotlib","implicit":true,"key":"UKB9NSSi76"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"You can create turtle graphics using Matplotlib, a powerful Python plotting library. While it's not as interactive as 'iturtle,' you can still create interesting drawings and animations. Here's a simple example of turtle graphics using Matplotlib","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Tnef7ZlQ1U"}],"key":"tB5E2CbWRa"}],"data":{"type":"notebook-content"},"key":"oFwZzbb3p7"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nimport numpy as np\n\ndef draw_polygon(sides, size):\n    angle = 360 / sides\n    x = []\n    y = []\n\n    for _ in range(sides):\n        x.append(np.cos(np.radians(angle * _)) * size)\n        y.append(np.sin(np.radians(angle * _)) * size)\n\n    # Close the polygon\n    x.append(x[0])\n    y.append(y[0])\n\n    plt.figure(figsize=(6, 6))\n    plt.plot(x, y, marker='o')\n    plt.xlim(-size * 1.2, size * 1.2)\n    plt.ylim(-size * 1.2, size * 1.2)\n    plt.gca().set_aspect('equal', adjustable='box')\n    plt.show()\n\ndraw_polygon(6, 100)","key":"IIDRep8EKm"},{"type":"output","id":"GlL17Ut4UOabYJsTKS2Xk","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"220cc9407ba0b83d483266272c1469b5","path":"/220cc9407ba0b83d483266272c1469b5.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"VEHp0jkBa8"}],"data":{"type":"notebook-code"},"key":"LPgeB54b4E"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"PyWidgets and Matplotlib","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Pka9CLvCVp"}],"identifier":"pywidgets-and-matplotlib","label":"PyWidgets and Matplotlib","html_id":"pywidgets-and-matplotlib","implicit":true,"key":"TervWJKX91"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"You can combine IPyWidgets with Matplotlib to create interactive turtle graphics. IPyWidgets can be used to control parameters like step size and angles interactively. Here's a simple example:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pgDJrElFXk"}],"key":"LIt6jJuLzr"}],"data":{"type":"notebook-content"},"key":"KrIku4PEc5"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib.patches import Polygon\nfrom ipywidgets import interact, widgets\nfrom IPython.display import display\n\n# Initialize starting point\nx, y = 0, 0\nangle = 0\n\ndef draw_polygon(sides, size):\n    global x, y, angle\n\n    angle = 360 / sides\n    points = []\n\n    for _ in range(sides):\n        # Calculate new position\n        new_x = x + size * np.cos(np.radians(angle * _))\n        new_y = y + size * np.sin(np.radians(angle * _))\n\n        # Draw a line from the current position to the new position\n        plt.plot([x, new_x], [y, new_y], marker='o')\n\n        # Update the current position\n        x, y = new_x, new_y\n\n        # Update the angle\n        angle += angle\n\n    plt.gca().set_aspect('equal', adjustable='box')\n    plt.show()\n\n# Create interactive sliders\ninteract(draw_polygon, sides=widgets.IntSlider(min=3, max=12, step=1, value=6), size=widgets.FloatSlider(min=10, max=200, step=10, value=100))","key":"XjJzx0ZQgg"},{"type":"output","id":"JiP24wpGYZbnrdywFg0ib","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"d59fad56478941fb9e1402e4ab9391c8\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"interactive(children=(IntSlider(value=6, description='sides', max=12, min=3), FloatSlider(value=100.0, descripâ€¦","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":null,"metadata":{},"data":{"text/plain":{"content":"<function __main__.draw_polygon(sides, size)>","content_type":"text/plain"}}}],"key":"Re6EiNh4iy"}],"data":{"type":"notebook-code"},"key":"hnD9EPcnHa"}],"key":"IX9OmoOgDg"},"references":{"cite":{"order":[],"data":{}}}}